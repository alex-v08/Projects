{"version":3,"sources":["components/header.js","components/newDish.js","components/dish.js","components/dishes.js","App.js","components/country.js","components/countries.js","components/notFound.js","components/router.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Component","NewDish","newDish","React","createRef","addDish","event","console","log","preventDefault","_this","value","props","onAddDish","_this2","this","autoComplete","onSubmit","index_es","label","type","margin","variant","inputRef","e","color","size","className","onClick","Add_default","Dish","state","edit","name","setState","handleChange","newState","Object","objectSpread","currentTarget","onUpdateDish","index","component","subheader","onChange","Edit_default","ingredients","map","ingredient","button","key","ScatterPlot_default","inset","primary","Dishes","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","goBack","history","push","updateDish","updatedName","inherits","createClass","data","dishes","dish","components_dish","App","showDishes","dishName","id","country","header","components_newDish","Country","delete","onDelete","Delete_default","Countries","countries","filter","getCountries","fetch","then","response","json","catch","error","_this3","country_Country","NotFound","Router","BrowserRouter","Switch","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c46c3242.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Platillos TÃ­picos</h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Fab, TextField } from \"@material-ui/core\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\n\nclass NewDish extends Component {\n  // constructor() {\n  //   super();\n  //   this.addDish = this.addDish.bind(this);\n  // }\n\n  newDish = React.createRef();\n\n  addDish = event => {\n    console.log(\"Agregar platillo\");\n    event.preventDefault();\n    // console.log(this.newDish.current.value);\n    console.log(this.newDish.value);\n    this.props.onAddDish(this.newDish.value);\n    this.newDish.value = \"\";\n  };\n\n  render() {\n    return (\n      <form autoComplete=\"off\" onSubmit={this.addDish}>\n        {/* <input ref={this.newDish} /> */}\n\n        <TextField\n          label=\"Platillo...\"\n          type=\"text\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          inputRef={e => (this.newDish = e)}\n        />\n        <Fab\n          color=\"primary\"\n          size=\"medium\"\n          className=\"dish-form-icon\"\n          onClick={this.addDish}\n        >\n          <AddIcon />\n        </Fab>\n      </form>\n    );\n  }\n}\n\nexport default NewDish;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListSubheader,\n  ListItemText,\n  ListItemIcon,\n  TextField,\n  IconButton\n} from \"@material-ui/core\";\nimport ScatterPlot from \"@material-ui/icons/ScatterPlot\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nclass Dish extends Component {\n  state = {\n    edit: false,\n    name: this.props.name\n  };\n\n  edit = e => {\n    this.setState({ edit: !this.state.edit });\n  };\n\n  handleChange = e => {\n    let newState = { ...this.state };\n    newState.name = e.currentTarget.value;\n\n    this.setState(newState);\n\n    this.props.onUpdateDish(this.props.index, newState.name);\n  };\n\n  componentDidUpdate() {\n    console.log(\"Componente actualizado\");\n  }\n\n  render() {\n    return (\n      <Card className=\"card\">\n        <CardContent>\n          <List\n            component=\"nav\"\n            subheader={\n              <ListSubheader component=\"div\">\n                {this.state.edit ? (\n                  <TextField\n                    label=\"Platillo...\"\n                    type=\"text\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                  />\n                ) : (\n                  this.props.name\n                )}\n                <IconButton size=\"small\" onClick={this.edit}>\n                  <Edit />\n                </IconButton>\n              </ListSubheader>\n            }\n          >\n            {this.props.ingredients.map((ingredient, index) => (\n              <ListItem button key={index}>\n                <ListItemIcon>\n                  <ScatterPlot />\n                </ListItemIcon>\n                <ListItemText inset primary={ingredient} />\n              </ListItem>\n            ))}\n          </List>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default Dish;\n","import React, { Component } from \"react\";\nimport { GridList } from \"@material-ui/core\";\n\nimport Dish from \"./dish.js\";\n\nexport class Dishes extends Component {\n  goBack = e => {\n    e.preventDefault();\n    this.props.history.push(\"/\");\n  };\n\n  updateDish = (index, updatedName) => {\n    this.props.onUpdateDish(index, updatedName);\n  };\n\n  render() {\n    return (\n      <div>\n        <GridList>\n          {this.props.data.dishes.map((dish, index) => (\n            <Dish\n              key={index}\n              name={dish.name}\n              ingredients={dish.ingredients}\n              index={index}\n              onUpdateDish={this.updateDish}\n            />\n          ))}\n        </GridList>\n      </div>\n    );\n  }\n}\n\nexport default Dishes;\n","import React, { Component } from \"react\";\n\nimport Header from \"./components/header\";\nimport NewDish from \"./components/newDish\";\nimport Dishes from \"./components/dishes\";\n\nimport data from \"./assets/data/dishes.json\";\n\nimport \"./styles/App.css\";\n\nclass App extends Component {\n  state = {\n    dish: \"tacos\",\n    dishes: data\n  };\n\n  showDishes = e => {\n    e.preventDefault();\n    this.props.history.push(\"/platillos\");\n  };\n\n  updateDish = (index, updatedName) => {\n    let newState = { ...this.state };\n    newState.dishes.dishes[index].name = updatedName;\n\n    this.setState(newState);\n  };\n\n  addDish = dishName => {\n    let newState = { ...this.state };\n\n    const newDish = {\n      id: newState.dishes.dishes.length,\n      name: dishName,\n      country: \"MÃ©xico\",\n      ingredients: [\"Semillas\", \"Pollo\", \"Arroz\"]\n    };\n\n    newState.dishes.dishes.push(newDish);\n\n    this.setState(newState);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <NewDish onAddDish={this.addDish} />\n        {/* <Dish name={this.dish} qty=\"3\" /> */}\n        <Dishes data={this.state.dishes} onUpdateDish={this.updateDish} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport Delete from \"@material-ui/icons/Delete\";\n\nexport class Country extends Component {\n  delete = name => {\n    this.props.onDelete(name);\n  };\n\n  render() {\n    return (\n      <li>\n        <IconButton size=\"small\" onClick={this.edit}>\n          <Delete onClick={() => this.delete(this.props.name)} />\n        </IconButton>\n        {this.props.name}\n      </li>\n    );\n  }\n}\n\nexport default Country;\n","import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { Country } from \"./country\";\n\nexport class Countries extends Component {\n  constructor() {\n    super();\n    this.state = {\n      countries: []\n    };\n  }\n  componentDidMount() {\n    this.getCountries();\n  }\n\n  getCountries() {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ countries: data });\n      })\n      .catch(error => console.log(error));\n  }\n\n  delete = name => {\n    let newState = { ...this.state };\n\n    newState.countries = newState.countries.filter(\n      country => country.name !== name\n    );\n\n    this.setState(newState);\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>PaÃ­ses</h1>\n        <ul>\n          {this.state.countries.map((country, index) => (\n            <Country key={index} name={country.name} onDelete={this.delete} />\n          ))}\n        </ul>\n\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.getCountries}\n        >\n          Cargar lista\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Countries;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Contenido no encontrado</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./../App\";\nimport Dishes from \"./dishes\";\nimport Dish from \"./dish\";\nimport Countries from \"./countries\";\nimport NotFound from \"./notFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/platillos\" component={Dishes} />\n      <Route path=\"/platillo/:name\" component={Dish} />\n      <Route path=\"/paises\" component={Countries} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport Router from \"./components/router\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}